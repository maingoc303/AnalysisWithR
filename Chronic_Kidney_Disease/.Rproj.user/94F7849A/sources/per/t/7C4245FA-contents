# library
{
  #install.packages("clustMixType")
  library(clustMixType)
}

{
  source("R_Code.R")
  source("descriptive.R")
}

# dataframe for cluster analysis

scaled_df = df1 %>%as.data.frame()

scaled_df[,c(4,5,10,13:15)] <- scale(df1[,c(4,5,10,13:15)])

#head(scaled_df)

# matrix of predictors
X = scaled_df %>% select(-c(1:3))

# run the loop to choose the best value for k, number cluster
k = numeric(10)

for (i in 1:10){
  kpres = kproto(X, k =i,
                 nstart = 5,
                 lambda = lambdaest(X),
                 verbose = F)
  k[i] = kpres$tot.withins
}

clust_search = tibble(Cluster = c(1:10), k = k) %>% 
  ggplot(aes(x = Cluster, y = k)) + 
  geom_point(size = 3, 
             col ="red3") +
  geom_path() + 
  geom_vline(xintercept = 4, 
             linetype = 2)+
  scale_x_continuous(breaks = c(1:10))

k_opt <- ptbiserial_kproto(data = X, 
                           lambda = lambdaest(X),
                           k = 2:10, 
                           nstart = 5, 
                           verbose = FALSE)

metric = tibble(Cluster = c(2:10), 
       Metric = as.vector(k_opt$indices)) %>% 
  ggplot(aes(x = Cluster, 
             y = Metric)) + 
  geom_point(size = 3, 
             col ="red3") +
  geom_path() + 
  geom_vline(xintercept = 3, 
             linetype = 2)+
  scale_x_continuous(breaks = c(2:10))


kpres_4 = kproto(x = X,
                 k = 4,
                 lambda = lambdaest(X))

clust_info = kpres_4
clust_values = summary(kpres_4)
